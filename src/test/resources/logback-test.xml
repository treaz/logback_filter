<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">

<!--            This evaluator will excluding from logging all logs that have Dummy error in the log message. -->
            <evaluator> <!-- defaults to type ch.qos.logback.classic.boolex.JaninoEventEvaluator -->
<!--                throwableProxy.getClassName().contains("...") has a bug and it's ignored in the filter when there are too many log messages -->
<!--                <expression>return throwableProxy.getClassName().contains("RuntimeException");</expression>-->
                <expression>return message.contains("Logging exception");</expression>
            </evaluator>
            <OnMismatch>NEUTRAL</OnMismatch>
            <OnMatch>DENY</OnMatch>
        </filter>
        <encoder>
<!--            Another way to avoid seeing the stack trace of the exception is to add %nopex in the pattern-->
<!--            With this solution, the error message will still appear in the logs-->
            <pattern>%d [%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
    </appender>

    <root level="TRACE">
        <appender-ref ref="STDOUT"/>
    </root>
</configuration>
